#
#    Copyright 2009-2021 the original author or authors.
#
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

name: Modified Java CI
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java:
        - 8
        - 11
        - 17
        - 21
        distribution:
        - adopt
      fail-fast: false
      max-parallel: 4
    name: test (${{ matrix.java }}, ${{ matrix.distribution }})
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-test (${{ matrix.java }}, ${{ matrix.distribution }}).csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/easyexcel/easyexcel', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - uses: actions/checkout@main
    - run: touch optcd-3.txt
    - name: Set up JDK
      uses: actions/setup-java@main
      with:
        java-version: ${{ matrix.java }}
        distribution: ${{ matrix.distribution }}
    - run: touch optcd-4.txt
    - name: Cache local Maven repository
      uses: actions/cache@main
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: |-
          ${{ runner.os }}-m2
    - run: touch optcd-5.txt
    - name: Chmod
      run: chmod +x mvnw
    - run: touch optcd-6.txt
    - name: Test with Maven
      run: ./mvnw test -B -Dmaven.test.skip=false
    - run: touch optcd-7.txt
    - name: Test with Maven
      run: ./mvnw test -B -Dmaven.test.skip=false -DargLine="--add-opens=java.base/java.lang=ALL-UNNAMED
        --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/sun.reflect.annotation=ALL-UNNAMED"
    - run: touch optcd-8.txt
    - name: Maven Build
      run: ./mvnw install -B -V
    - run: touch optcd-9.txt
    - name: Java Doc
      run: ./mvnw javadoc:javadoc
    - run: touch optcd-10.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-test (${{ matrix.java }}, ${{ matrix.distribution }})
        path: /home/runner/inotifywait-log-test (${{ matrix.java }}, ${{ matrix.distribution
          }}).csv
'on':
- push
- workflow_dispatch
